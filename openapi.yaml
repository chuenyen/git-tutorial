openapi: 3.0.1
info:
  title: Swagger Petstore
  description: 'This is a sample server Petstore server.  You can find out more about     Swagger
    at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For
    this sample, you can use the api key `special-key` to test the authorization     filters.'
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://petstore.swagger.io/v2
tags:
- name: recommendation
  description: The equity research recommendations
- name: codification
  description: The codification of the available values
paths:
  /recommendation:
    get:
      tags:
      - recommendation
      summary: Get all Recommendations
      description: Returns a list of recommendations order by publication date in descending order
      operationId: getAllRecommendations
      parameters:
      - name: isinCode
        in: query
        description: ISIN Code of Recommendation to return
        schema:
          type: string
      - name: risk
        in: query
        description: Risk rating of Recommendation to return
        schema:
          type: string
          enum:
          - "R1"
          - "R2"
          - "R3"
      - name: country
        in: query
        description: ISO Numeric Code of the country of Recommendation to return
        schema:
          type: integer
      - name: currency
        in: query
        description: Currency Code of the Recommendation to return
        schema:
          type: string
      - name: opinion
        in: query
        description: Opinion of the Recommendation to return
        schema:
          type: string
          enum:
          - BUY
          - HOLD
          - SELL
          - REDUCE
          - NOOPINION
          - CONFLICT_OF_INTEREST
      - name: zone
        in: query
        description: "The geographical zone of the stock recommendation to return"
        schema:
          type: string
      - name: gicsLevel1
        in: query
        description: "The sector GICS level 1 of the stock recommendation to return"
        schema:
          type: string
      - name: gicsLevel2
        in: query
        description: "The sector GICS level 2 of the stock recommendation to return"
        schema:
          type: string
      - name: minPublishDate
        in: query
        description: "Filter by from when the date of publication of the recommendations should be returned. Format is yyyy-MM-dd"
        schema:
          type: string
          format: date
      - name: latest
        in: query
        description: "For each individual ISIN, filter either the latest recommendation of the ISIN (if latest=Y) or return all the recommendations published for the ISIN (if latest=N or parameter not found)"
        schema:
          type: string
          default: "N"
          enum:
          - "Y"
          - "N"
      - name: start
        in: query
        description: "The start index of the pagination resource"
        schema:
          type: integer
      - name: count
        in: query
        description: "The total count of objects to return for the pagination resource"
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recommendation'
        206:
          description: successful operation but partial content, used with pagination resources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recommendation'
        400:
          description: Invalid ISIN supplied
          content: {}
        404:
          description: Recommendation not found
          content: {}
      security:
      - api_key: []
  /recommendation/desknote/{recoDesknoteId}:
    get:
      tags:
      - recommendation
      summary: Get desknote pdf by recommendation desknote id
      description: Returns latest financial data by ISIN
      operationId: getDesknoteById
      parameters:
      - name: recoDesknoteId
        in: path
        description: ISIN Code of Recommendation to return
        required: true
        schema:
          type: string
      - name: entity
        in: query
        description: Logo of the PDF to return. BNPP Wealth Management (BNP), BNPP Banque Privee (BBP), BNP Life Banker (BLB), BNPP Fortis (FOR), BNPP BNL (BNL)
        required: true
        schema:
          type: string
          enum:
          - "BNP"
          - "BBP"
          - "BLB"
          - "FOR"
          - "BNL"
      - name: language
        in: query
        description: The language of the PDF to be returned. English (EN), French (FR), Italian (IT), Dutch (NL), German (DE)
        required: true
        schema:
          type: string
          enum:
          - "EN"
          - "FR"
          - "IT"
          - "NL"
          - "DE"
      responses:
        200:
          description: successful operation to return a PDF format of the desknote
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        400:
          description: Invalid parameters supplied
          content: {}
        404:
          description: Desknote data not found
          content: {}
      security:
      - api_key: []
  /recommendation/financialData/{isinCode}:
    get:
      tags:
      - recommendation
      summary: Get financial data by ISIN code
      description: Returns latest financial data by ISIN
      operationId: getFinancialDataByIsin
      parameters:
      - name: isinCode
        in: path
        description: ISIN Code of Recommendation to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialData'
        400:
          description: Invalid ISIN supplied
          content: {}
        404:
          description: Financial data not found
          content: {}
      security:
      - api_key: []
  /recommendation/commentaries/{recoDesknoteId}:
    get:
      tags:
      - recommendation
      summary: Find Commentaries by Desknote
      description: Returns the commentaries of the desknote
      operationId: getCommentariesRecommendationByDesknoteId
      parameters:
      - name: recoDesknoteId
        in: path
        description: Desknote Id of the recommendation's commentaries to return
        required: true
        schema:
          type: string
      - name: language
        in: query
        description: The language of the commentaries to be returned. English (EN), French (FR), Italian (IT), Dutch (NL), German (DE)
        required: true
        schema:
          type: string
          enum:
          - "EN"
          - "FR"
          - "IT"
          - "NL"
          - "DE"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commentaries'
        400:
          description: Invalid desknoteId supplied
          content: {}
        404:
          description: Commentary data not found
          content: {}
      security:
      - api_key: []
  /codification/countries:
    get:
      tags:
      - codification
      summary: Find Country Codes
      description: Returns the country codes and names
      operationId: getCountryCodes
      parameters:
      - name: iso2Code
        in: query
        description: Return the country based on the ISO2 Code
        schema:
          type: string
      - name: iso3Code
        in: query
        description: Return the country based on the ISO3 Code
        schema:
          type: string
      - name: isoNumericCode
        in: query
        description: Return the country based on the ISO Numeric Code
        schema:
          type: number
      - name: language
        in: query
        description: The language of the country label to be returned. English (EN), French (FR), Italian (IT), Dutch (NL), German (DE)
        schema:
          type: string
          enum:
          - "EN"
          - "FR"
          - "IT"
          - "NL"
          - "DE"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Countries'
        400:
          description: Invalid parameters supplied
          content: {}
        404:
          description: Country data not found
          content: {}
      security:
      - api_key: []
  /codification/sectors:
    get:
      tags:
      - codification
      summary: Find Sectors
      description: Returns the sectors and names
      operationId: getSectors
      parameters:
      - name: gicsLevel1
        in: query
        description: Return the sector based on the GICS Level 1 Code
        schema:
          type: integer
      - name: gicsLevel2
        in: query
        description: Return the sector based on the GICS Level 2 Code
        schema:
          type: integer
      - name: language
        in: query
        description: The language of the sector label to be returned. English (EN), French (FR), Italian (IT), Dutch (NL), German (DE)
        schema:
          type: string
          enum:
          - "EN"
          - "FR"
          - "IT"
          - "NL"
          - "DE"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SectorCodes'
        400:
          description: Invalid parameters supplied
          content: {}
        404:
          description: Sector codes data not found
          content: {}
      security:
      - api_key: []
  /codification/opinions:
    get:
      tags:
      - codification
      summary: Find Opinion
      description: Returns the opinion and names
      operationId: getOpinions
      parameters:
      - name: opinion
        in: query
        description: Return the opinion based on the Code
        schema:
          type: string
          enum:
          - BUY
          - HOLD
          - SELL
          - REDUCE
          - NOOPINION
          - CONFLICT_OF_INTEREST
      - name: language
        in: query
        description: The language of the opinion label to be returned. English (EN), French (FR), Italian (IT), Dutch (NL), German (DE)
        schema:
          type: string
          enum:
          - "EN"
          - "FR"
          - "IT"
          - "NL"
          - "DE"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpinionCodes'
        400:
          description: Invalid parameters supplied
          content: {}
        404:
          description: Opinion codes data not found
          content: {}
      security:
      - api_key: []
  /codification/marketPlaces:
    get:
      tags:
      - codification
      summary: Find Market Place
      description: Returns the market place and names
      operationId: getMarketPlaces
      parameters:
      - name: marketPlace
        in: query
        description: Return the market place based on the Code
        schema:
          type: string
      - name: language
        in: query
        description: The language of the market place label to be returned. English (EN), French (FR), Italian (IT), Dutch (NL), German (DE)
        schema:
          type: string
          enum:
          - "EN"
          - "FR"
          - "IT"
          - "NL"
          - "DE"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MarketPlaceCodes'
        400:
          description: Invalid parameters supplied
          content: {}
        404:
          description: Market Place codes data not found
          content: {}
      security:
      - api_key: []
components:
  schemas:
    Recommendation:
      type: object
      properties:
        recoDesknoteId:
          type: integer
          format: int64
          description: "The recommendation's desknote Id correspond to the PDF published"
        isinCode:
          type: string
          example: US0378331005
          description: "An International Securities Identification Number uniquely identifies a security"
        name:
          type: string
          example: APPLE, INC
          description: "The name of the stock"
        creationDate:
          type: "string"
          format: "date-time"
          description: "The creation datetime of the recommendation"
        modifiedDate:
          type: "string"
          format: "date-time"
          description: "The modified datetime of the recommendation"
        publicationDate:
          type: "string"
          format: "date-time"
          description: "The datetime when the  recommendation was published"
        wmAnalyst:
          type: "string"
          description: "The name of the BNPPWM analyst who published the recommendation"
          example: "Cristiano RONALDO"
        opinion:
          type: "string"
          description: "Recommendation of the stock"
          enum:
          - "BUY"
          - "HOLD"
          - "SELL"
          - "REDUCE"
          - "NOOPINION"
          - "CONFLICT_OF_INTEREST"
        currency:
          type: "string"
          example: "USD"
          description: "Currency of the stock"
        targetPrice:
          type: "number"
          example: 99.99
          description: "Target Price for the recommendation"
        stockRatings:
          $ref: '#/components/schemas/StockRatings'
        reutersCode:
          type: string
          example: "IBM.N"
          description: "A Reuters instrument code, or RIC, is a ticker-like code used by Thomson Reuters to identify financial instruments and indices. The RIC is made up primarily of the security's ticker symbol, optionally followed by a period and exchange code based on the name of the stock exchange using that ticker"
        marketPlace:
          type: string
          example: "TODO"
          description: "TODO"
        country:
          type: integer
          example: "156"
          description: "ISO 3166-1 numeric (or numeric-3) codes are three-digit country codes defined in ISO 3166-1, part of the ISO 3166 standard published by the International Organization for Standardization (ISO), to represent countries"
          externalDocs:
            url: https://en.wikipedia.org/wiki/ISO_3166-1_numeric
        zone:
          type: string
          example: "TODO"
          description: "TODO"
        sector:
          $ref: '#/components/schemas/Sector'
        desknotes:
          type: array
          items:
            $ref: '#/components/schemas/Desknotes'
    StockRatings:
      type: object
      properties:
        risk:
          type: string
          description: "TODO"
          enum:
          - R1
          - R2
          - R3
        sri:
          type: number
          description: "TODO"
          enum:
          - 1
          - 2
          - 3
        srri:
          type: string
          description: "TODO"
        standardPoor:
          type: string
          example: "A+"
          description: "The S&P rating is a credit score that describes the general creditworthiness of a company. The Standard and Poor's company rates how likely debt will be repaid from the entity in question"
        moodys:
          type: string
          example: "Aaa"
          description: "The rank of the creditworthiness of borrowers by Moody's Corporation, using a standardized ratings scale which measures expected investor loss in the event of default. In Moody's Investors Service's ratings system, securities are assigned a rating from Aaa to C, with Aaa being the highest quality and C the lowest quality."
    Desknotes:
      type: object
      properties:
        recoDesknoteId:
          type: string
          description: "The recommendation desknote id"
        entity:
          type: string
          description: Logo of the PDF to return. BNPP Wealth Management (BNP), BNPP Banque Privee (BBP), BNP Life Banker (BLB), BNPP Fortis (FOR), BNPP BNL (BNL)
          enum:
          - "BNP"
          - "BBP"
          - "BLB"
          - "FOR"
          - "BNL"
        language:
          type: string
          description: The language of the desknote. English (EN), French (FR), Italian (IT), Dutch (NL), German (DE)
          enum:
          - "EN"
          - "FR"
          - "IT"
          - "NL"
          - "DE"
        fileName:
          type: string
          description: "The filename of the desknote"
    Sector:
      type: object
      externalDocs:
        description: "The Global Industry Classification Standard (GICS) is an industry taxonomy developed in 1999 by MSCI and Standard & Poor's (S&P) for use by the global financial community"
        url: https://en.wikipedia.org/wiki/Global_Industry_Classification_Standard
      properties:
        gicsLevel1:
          type: number
          description: "The sector classification defined in GICS for the company's principal business acitivity"
          example: "40"
        gicsLevel2:
          type: number
          description: "The industry group classification defined in GICS for the company's principal business acitivity"
          example: "4010"
    FinancialData:
      type: object
      properties:
        closingPrice:
          type: number
          example: 123.45
          description: "The closing price is the last price at which the stock traded during the regular trading day"
        closingPriceDate:
          type: "string"
          format: "date"
          description: "The date of the closing price at which the stock last traded"
        marketCapitalization:
          type: number
          example: 123456789.99
          description: "Market value of equity is the total dollar value of a company's equity and is also known as market capitalization. This measure of a company's value is calculated by multiplying the current stock price by the total number of outstanding shares"
        annualPER:
          type: number
          example: 99.99
          description: "The price-earnings ratio, also known as P/E ratio, P/E, or PER, is the ratio of a company's share price to the company's earnings per share. The ratio is used for valuing companies and to find out whether they are overvalued or undervalued"
        annualDividendYield:
          type: number
          example: 99.99
          description: "Dividend yield equals the annual dividend per share divided by the stock's price per share. For example, if a company's annual dividend is $1.50 and the stock trades at $25, the dividend yield is 6% ($1.50 ÷ $25)"
    Commentaries:
      type: object
      properties:
        businessDescription:
          type: string
          description: "TODO"
        investmentCase:
          type: string
          description: "TODO"
    Countries:
      type: object
      properties:
        iso2Code:
          type: string
          description: "The two-letter country codes for the representation of names of countries"
        iso3Code:
          type: string
          description: "The three-letter country codes for the representation of names of countries"
        isoNumericCode:
          type: integer
          description: "The three-digit country codes for the representation of names of countries"
        name:
          type: string
          description: "The name of the country"
        language:
          type: string
          description: "The language of the country name"
          enum:
          - EN
          - FR
          - IT
          - NL
          - DE
    SectorCodes:
      type: object
      properties:
        gicsLevel1:
          type: number
          description: "The two-letter numeric GICS codes level 1 for the representation of sector classification"
        gicsLevel2:
          type: number
          description: "The four-letter numeric GICS codes level 2 for the representation of sector industry group"
        name:
          type: string
          description: "The name of the sector"
        language:
          type: string
          description: "The language of the sector"
          enum:
          - EN
          - FR
          - IT
          - NL
          - DE
    OpinionCodes:
      type: object
      properties:
        opinion:
          type: string
          description: "The Opinion of the recommendation"
          example: "BUY"
          enum:
          - BUY
          - HOLD
          - SELL
          - REDUCE
          - NOOPINION
          - CONFLICT_OF_INTEREST
        name:
          type: string
          description: "The label of the opinion"
          example: "Buy"
        language:
          type: string
          description: "The language of the opinion label"
          enum:
          - EN
          - FR
          - IT
          - NL
          - DE
    MarketPlaceCodes:
      type: object
      properties:
        marketPlace:
          type: string
          description: "The market place of the recommendation"
          example: "TODO"
        name:
          type: string
          description: "The label of the market place"
          example: "NEW YORK STOCK EXCHANGE"
        language:
          type: string
          description: "The language of the market place label"
          enum:
          - EN
          - FR
          - IT
          - NL
          - DE
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
